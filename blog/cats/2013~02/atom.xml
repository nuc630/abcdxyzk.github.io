<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 2013~02 | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/2013~02/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2015-07-02T12:22:34+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[搭建FTP服务器]]></title>
    <link href="http://abcdxyzk.github.io/blog/2013/02/18/tools-vsftp/"/>
    <updated>2013-02-18T18:59:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2013/02/18/tools-vsftp</id>
    <content type="html"><![CDATA[<h4>用VSFTP搭建FTP服务器</h4>

<p>FTP服务器是平时应用最为广泛的服务之一。VSFTP是Very Secure FTP的缩写，意指非常安全的FTP服务。VSFTP功能强大，通过结合本地系统的用户认证模块及其多功能的配置项目，可以快速有效的搭建强大的多用户FTP服务。</p>

<h4>一、主要配置选项</h4>

<p>VSFTP的主配置文件是/etc/vsftpd.conf 。由于可配置的选项实在太多，无法一一详谈，只能截取比较常用的功能配置选项来加以说明。完整说明可参考man vsftpd.conf。 <br/>
这里需要注意的是，每个配置选项都是由“配置项目名称＝配置值“所定义。在每个配置变量后，要紧跟等号，再紧跟设置的变量值。中间不允许出现空格之类的分隔符，否则导致配置错误，无法生效！
另外，如果需要开通上传功能，则应注意用来登录FTP的本地系统用户对要操作的目录需要具备写权限，否则无法上传文件！</p>

<p>版本vsftpd: version 2.0.6 <br/>
启动VSFTPD：sudo /etc/init.d/vsftpd start <br/>
停止VSFTPD：sudo /etc/init.d/vsftpd stop <br/>
重启VSFTPD：sudo /etc/init.d/vsftpd restart <br/>
以下为常用的配置选项：
<code>
1、listen=YES
若设置为YES，开启监听网络。
2、anonymous_enable
若设置为YES，则允许匿名用户访问；若设置为NO则拒绝匿名用户访问。
如果开启的话，则可以通过用户名ftp或者anonymous来访问，密码随便。
3、local_enable
若设置为YES，则允许通过本地用户帐号访问；若设置为NO，则拒绝本地用户帐号访问。如果你拒绝了陌生人访问，那么这个必须设置为YES吧，否则谁能访问你的FTP呢？
4、write_enable
若设置为YES，则开启FTP全局的写权限；若设置为NO，则不开。
若为NO则所有FTP用户都无法写入，包括无法新建、修改、删除文件、目录等操作，也就是说用户都没办法上传文件！！
5、anon_upload_enable
若设置为YES，开启匿名用户的上传权限。前提是write_enable有开启，并且用户具有对当前目录的可写权限。 若设置为NO，则关闭匿名用户的上传权限。
6、anon_mkdir_write_enable
若设置为YES，开启匿名用户新建目录的权限。前提是write_enable有开启，并且用户具有对当前目录的可写权限。 若设置为NO，则关闭匿名用户新建目录的权限。
7、dirmessage_enable
若设置为YES，则可开启目录信息推送，也就是用户登录FTP后可以列出当前目录底下的文件、目录。 这个应该要开启吧！
8、xferlog_enable
若设置为YES，则开启登录、上传、下载等事件的日志功能。应开启！
9、xferlog_file=/var/log/vsftpd.log
指定默认的日志文件，可指定为其他文件。
10、xferlog_std_format
若设置为YES，则启用标准的ftpd日志格式。可以不启用。
11、connect_from_port_20
若设置为YES，则服务器的端口设为20。
如果不想用端口20，可以另外通过ftp_data_port来指定端口号。
12、chown_uploads
若设置为YES，则匿名用户上传文件后系统将自动修改文件的所有者。
若要开启，则chown_username=whoever也需指定具体的某个用户，用来作为匿名用户上传文件后的所有者。
13、idle_session_timeout=600
不活动用户的超时时间，超过这个时间则中断连接。
14、data_connection_timeout=120
数据连接超时时间 。
15、ftpd_banner=Welcome to blah FTP service.
FTP用户登入时显示的信息 。
16、local_root=/home/ftp
指定一个目录，用做在每个本地系统用户登录后的默认目录。
17、anon_root=/home/ftp
指定一个目录，用做匿名用户登录后的默认目录。
18、chroot_local_user、 chroot_list_enable、chroot_list_file
这个组合用于指示用户可否切换到默认目录以外的目录。
其中，chroot_list_file默认是/etc/vsftpd.chroot_list，该文件定义一个用户列表。
若chroot_local_user 设置为NO，chroot_list_enable设置为NO，则所有用户都是可以切换到默认目录以外的。
若chroot_local_user 设置为YES，chroot_list_enable设置为NO，则锁定FTP登录用户只能在其默认目录活动，不允许切换到默认目录以外。
若chroot_local_user 设置为YES，chroot_list_enable设置为YES，则chroot_list_file所指定的文件里面的用户列表都可以访问默认目录以外的目录，而列表以外的用户则被限定在各自的默认目录活动。
若chroot_local_user设置为NO，chroot_list_enable设置为YES，则chroot_list_file所指定的文件里面的用户列表都被限定在各自的默认目录活动，而列表以外的用户则可以访问默认目录以外的目录。
建议设置：chroot_local_user与chroot_list_enable都设置为YES。这样就只有chroot_list_file所指定的文件里面的用户列表可以访问默认目录以外的目录，而列表以外的用户则被限定在各自的默认目录活动！
好处：所有人都被限制在特定的目录里面。如果某些特定用户需要访问其他目录的权限，只需将其用户名写入chroot_list_file文件就可以赋予其访问其他目录的权限！
19、userlist_file、userlist_enable、userlist_deny
这个组合用于指示用户可否访问FTP服务。
其中，userlist_file默认是/etc/vsftpd.user_list，该文件定义一个用户列表。
若userlist_enable设置为YES，userlist_deny设置为NO，则只有userlist_file所指定的文件里面的用户列表里面的用户可以访问FTP。
若userlist_enable设置为YES，userlist_deny设置为YES，则userlist_file所指定的文件里面的用户列表里面的用户都被拒绝访问FTP。
若userlist_enable设置为NO，userlist_deny设置为YES，则这个列表没有实际用处，起不到限制的作用！因为所有用户都可访问FTP。
建议设置：userlist_enable与userlist_deny都设置为YES。这样则userlist_file所指定的文件里面的用户列表里面的用户都被拒绝访问FTP。
好处：只需将某用户帐号加入到userlist_file所指定文件里面的用户列表，就可以起到暂时冻结该用户的功能！
20、user_config_dir
指定一个目录用于存放针对每个用户各自的配置文件，比如用户kkk登录后，会以该用户名建立一个对应的配置文件。
比 如指定user_config_dir=/etc/vsftpd_user_conf,  则kkk登录后会产生一个/etc/vsftpd_user_conf/kkk的文件，这个文件保存的配置都是针对kkk这个用户的。可以修改这个文件而  不用担心影响到其他用户的配置。
</code></p>

<h4>二、一种VSFTP的配置方案</h4>

<h5>首先要安装VSFTP。</h5>

<p>源码编译或软件包安装都可以。
<code>sudo apt-get install vsptpd</code>
以下方案实现以下功能：<br/>
1、锁定用户在/home/ftp默认目录活动，<br/>
     并保留/etc/vsftpd.chroot_list文件里面的用户列表可访问其他目录。<br/>
2、具备暂时冻结FTP用户的功能，将需暂停的用户名加入到/etc/vsftpd.usr_list即可。</p>

<h5>设置配置文件：</h5>

<p>复制以下文件并保存为/etc/vsftpd.conf<br/>
新建两文件：touch /etc/vsftpd.chroot_list<br/>
          touch /etc/vsftpd.user_list<br/>
新建目录：mkdir /home/ftp<br/>
新建群组：addgroup ftp<br/>
修改/home/ftp属性：chown <a href="ftp:ftp">ftp:ftp</a> /home/ftp<br/>
新增FTP用户： adduser &ndash;shell /bin/false &ndash;home /home/ftp your_usr_name<br/>
把需要开通FTP的用户名加入到ftp群组：usermod -aG ftp your_usr_name<br/>
注意：<br/>
如果你的/etc/shells里面没有包含/bin/false，则你用上述的方法建立的用户将法访问#FTP，解决方法：编辑/etc/shells，加入/bin/false这行。</p>

<h4>三、前面提到的问题</h4>

<h5>1、如何添加FTP用户？</h5>

<p>设置local_enable为YES可以开放系统用户访问FTP。
在系统里面添加用户，将shell设置为/bin/false，并将其家目录若设置为/home/ftp或者其他目录。这样就可以建立只访问FTP而无法登录shell环境的用户。
注意：可以新建一个ftp组，把/home/ftp的所有者设为ftp，群组也设为ftp。然后所有新添加的FTP用户只需加入到FTP群组就可以具有对/home/ftp的访问权限了。这样也方便管理用户量比较大的FTP系统。如：<br/>
sudo addgroup ftp #如果有了就不用添加<br/>
sudo chown <a href="ftp:ftp">ftp:ftp</a> /home/ftp #如果改过了就不用再改<br/>
sudo adduser &ndash;shell /bin/false &ndash;home /home/ftp user1 #添加用户user1<br/>
sudo usermod  -aG ftp  user1  #把用户user1加入到ftp组<br/>
这样便可以通过用户名user1来访问FTP服务了。</p>

<h5>2、如何临时冻结某FTP用户？</h5>

<p>将 userlist_enable与userlist_deny都设置为YES。这样userlist_file所指定的文件里面的用户列表里面的用户都  被拒绝访问FTP。只需将某用户帐号加入到userlist_file所指定文件里面的用户列表，就可以起到暂时冻结该用户的功能！如需重新开通使用权  限，则只需从该文件中去掉相应的用户名。</p>

<h5>3、FTP用户登入后的默认目录？是否可以改变？</h5>

<p>可以通过local_root、anon_root来指定相应的默认目录。</p>

<h5>4、如何锁定FTP用户可访问的目录范围？</h5>

<p>将 chroot_local_user与chroot_list_enable都设置为YES。这样就只有chroot_list_file所指定的文件  里面的用户列表可以访问默认目录以外的目录，而列表以外的用户则被限定在各自的默认目录活动！如果某些特定用户需要访问其他目录的权限，只需将其用户名写  入chroot_list_file文件就可以赋予其访问其他目录的权限！</p>

<h5>5、FTP用户可以有哪些访问权限？可否上传文件？</h5>

<p>设置write_enable可以开启全局的写权限。这样FTP用户就可以在本地帐号管理系统允许的范围内进行写操作了</p>

<h5>6、root用户无法登录ftp？</h5>

<p>编辑/etc/ftpusers，将root注视掉就ok了</p>

<h4>四、可能遇到的主要问题</h4>

<h5>一、</h5>

<p>登录失败，解决方法：在/etc/shells中加入下面这句：/bin/false    就可以正常登录了</p>

<h5>二、</h5>

<p>上传文件时总是出现550 Permission denied错误，<br/>
查看vsftpd的配置文件sudo vim /etc/vsftpd.conf,<br/>
发现write_enable=YES这句配置项默认是被注释掉的即#write_enable=YES, <br/>
把前面的注释去掉，重启vsvfpd，一切正常了。</p>

<h5>三、</h5>

<p>user_config_dir 指定一个目录用于存放针对每个用户各自的配置文件。 <br/>
比 如指定user_config_dir=/etc/vsftpd_user_conf, 新建/etc/vsftpd_user_conf/kkk文件，输入下面内容：<br/>
write_enable=YES<br/>
anon_world_readable_only=NO<br/>
anon_upload_enable=YES<br/>
anon_mkdir_write_enable=YES<br/>
anon_other_write_enable=YES<br/>
local_root=/srv/ftp/ftp<br/>
这个文件保存的配置都是针对kkk这个用户的。可以修改这个文件而  不用担心影响到其他用户的配置。</p>

<h5>四、</h5>

<p>报下面的错误<br/>
<code>ftp:500 Illegal PORT command. 425</code><br/>
<code>ftp:Use PORT or PASV first</code><br/>
或者是下面的错误<br/>
<code>ftp:500 Illegal PORT command.</code><br/>
<code>ftp: bind: Address already in use</code><br/>
主要是由于Iptables防火墙不支持<br/>
ip_nat_ftp<br/>
ip_conntrack_ftp<br/>
在linux的ftp服务器上执行下列命令即可解决<br/>
modprobe ip_nat_ftp<br/>
modprobe ip_conntrack_ftp</p>

<h5>五、</h5>

<p>553 Could not create file<br/>
用 chown 或 chmod</p>

<h5>六、</h5>

<p>限定用户访问目录<br/>
local_root=/srv/ftp<br/>
chroot_local_user=YES<br/>
chroot_list_enable=NO</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FTP命令]]></title>
    <link href="http://abcdxyzk.github.io/blog/2013/02/16/system-tools-ftp-command/"/>
    <updated>2013-02-16T15:02:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2013/02/16/system-tools-ftp-command</id>
    <content type="html"><![CDATA[<ul>
<li>ftp 很快就会自动断开，lftp命令一样，更好用</li>
</ul>


<h4>Linux 终端连接FTP</h4>

<pre><code>$ ftp 10.85.7.97

Name (10.85.7.97:oracle): super

Password:   -- Linux 的密码是不回显的

ftp&gt;
</code></pre>

<p>如果FTP 允许匿名用户，那么用户名要输入anonymous,密码任意。 不能直接敲回车。</p>

<h4>查看FTP 命令</h4>

<pre><code>ftp&gt; ?
Commands may be abbreviated.  Commands are:
!               cr              mdir            proxy           send
$               delete          mget            sendport        site
account         debug           mkdir           put             size
append          dir             mls             pwd             status
ascii           disconnect      mode            quit            struct
bell            form            modtime         quote           system
binary          get             mput            recv            sunique
bye             glob            newer           reget           tenex
case            hash            nmap            rstatus         trace
ccc             help            nlist           rhelp           type
cd              idle            ntrans          rename          user
cdup            image           open            reset           umask
chmod           lcd             passive         restart         verbose
clear           ls              private         rmdir           ?
close           macdef          prompt          runique
cprotect        mdelete         protect         safe
</code></pre>

<p>可以通过help command 查看每个命令的说明
<code>
ftp&gt; help put
put             send one file
ftp&gt; help mput
mput            send multiple files
</code></p>

<h4>上传文件</h4>

<p>Put命令：格式：put local-file [remote-file] 将一个文件上传到ftp<br/>
Mput命令：格式：mput local-files 将本地主机中一批文件传送至远端主机.<br/>
注意：mput命令只能将当前本地目录下的文件上传到FTP上的当前目录。比如，在/root/dave下运行的ftp命令，则只有在/root/dave下的文件linux才会上传到服务器上的当前目录下。</p>

<h5>Put 代码示例：</h5>

<pre><code>ftp&gt; pwd    -- 显示FTP上当前路径
257 "/" is current directory.
ftp&gt; ls   -- 显示当前目录下的文件

ftp&gt; mkdir Dave    -- 创建文件夹Dave

ftp&gt; cd Dave      -- 进入文件夹Dave

ftp&gt; pwd        -- 显示当前目录

ftp&gt; lcd     -- 显示当前本地的路径，我们可以将这个路径下的这个文件上传到FTP服务器的相关位置

ftp&gt; !      -- 退出当前的窗口，返回Linux 终端，当我们退出终端的时候，又会返回到FTP上。
$ ls  -- 显示当前目录下的文件

$ vi Dave  -- 创建文件Dave
$ vi DBA   -- 创建文件DBA
$ ls       -- 显示文件夹里的内容，等会我们将这些文件copy到FTP上

$ exit  -- 退出终端，返回FTP命令行
exit
ftp&gt; lcd

ftp&gt; put DBA DBA    -- 将刚才创建的文件DBA 上传到ftp的当前目录上并命名为DBA。

ftp&gt; put DBA /Dave/SFDBA -- 将刚才创建的文件DBA 上传到ftp的当前目录上并重命名为SFDBA。

ftp&gt; put /home/oracle/DBA /test/SFDBA  

ftp&gt; cd test

ftp&gt; ls
</code></pre>

<h5>Mput 示例代码：</h5>

<pre><code>ftp&gt;cd Dave

ftp&gt;mput *
mput alert_log.txt?    -- 这里每个文件都要确认，按回车键就可以了

ftp&gt; ls       -- 显示目录下的文件

ftp&gt; delete SFDBA   --删除SFDBA 文件

ftp&gt; mdelete a*   -- 批量删除文件
mdelete alert_log.txt?  -- 每个文件都要确认
</code></pre>

<h4>下载文件</h4>

<p>同样也有2个命令：get 和mget。Mget 用户批量下载。<br/>
格式：get [remote-file] [local-file]<br/>
mget [remote-files]<br/>
同样，mget 是将文件下载到本地的当前目录下。</p>

<h5>Get 示例：</h5>

<pre><code>ftp&gt; get /test/SFDBA /home/SFDBA

local: /home/SFDBA: Permission denied  --Linux对权限控制的很严格，下载的时候是否有对应文件夹的写权限
ftp&gt;  get /test/SFDBA /home/oracle/SFDBA

ftp&gt; !
$ cd /home/oracle/
$ls
Dave  DBA  dead.letter  scripts  SFDBA  sqlnet.log
</code></pre>

<h5>Mget 示例：</h5>

<pre><code>ftp&gt; ls

ftp&gt; mget *
mget DBA?  -- 每个文件都要确认， 按回车即可

ftp&gt; !
$ ls
</code></pre>

<p>说明的地方：FTP 当前目录下的文件下载到本地的当前目录。</p>

<h4>断开FTP 连接</h4>

<p>Bye命令或者quit命令：中断与服务器的连接。
<code>
ftp&gt; bye
221 Goodbye!
</code></p>
]]></content>
  </entry>
  
</feed>
