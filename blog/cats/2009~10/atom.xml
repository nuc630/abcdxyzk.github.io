<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 2009~10 | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/2009~10/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2015-12-27T03:04:58+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Java Mune & Button]]></title>
    <link href="http://abcdxyzk.github.io/blog/2009/10/25/lang-java-mune/"/>
    <updated>2009-10-25T21:20:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2009/10/25/lang-java-mune</id>
    <content type="html"><![CDATA[<h4>Java Mune &amp; Button</h4>

<pre><code>    //package java_menu;
    import java.awt.*;
    import java.awt.event.*;

    class BBB extends Button
    {
        private int tt=0;
        public BBB() {
            super("0");
            addMouseListener( new MouseListener() {
                public void mousePressed(MouseEvent e) {
                    setLabel(String.valueOf((++tt)));
                }
                public void mouseExited(MouseEvent e) {}
                public void mouseReleased(MouseEvent e) {}
                public void mouseEntered(MouseEvent e) {}
                public void mouseClicked(MouseEvent e) {}
            });
            int x=(int)(Math.random()*10000), y=(int)(Math.random()*10000);
            setBounds( x % 500+70, y % 300+70, 70, 70);
            show();
        }
    }

    class MenuExam extends Frame
    {
        public MenuExam()
        {
            super("abcdxyzk");
            MenuBar bar = new MenuBar(); setMenuBar(bar);
            Menu bb = new Menu(" bbb ");
            MenuItem b1 = new MenuItem(" b1 ");
            MenuItem b2 = new MenuItem(" b2 ");
            bb.add(b1); bb.addSeparator(); bb.add(b2); bar.add(bb);

            b2.addActionListener( new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    BBB bbb = new BBB();
                    add(bbb);
                }
            });
            setLayout(null);   setSize(700, 500);
            TextField tf = new TextField();
            tf.setText("click b2");
            tf.setFont(new Font("TimesRoman", Font.BOLD, 30));
            tf.setEnabled(false);
            tf.setBounds(100, 350, 200, 100);
            add(tf);
            show();
        }
    }

    public class Main {
        public static void main(String[] args) {
            MenuExam mm = new MenuExam();
            mm.addWindowListener( new WindowAdapter() {
                public void windowClosing(WindowEvent e) {
                    System.exit(0);
                }
            });
        }
    }
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java WindowListener & ActionListener]]></title>
    <link href="http://abcdxyzk.github.io/blog/2009/10/24/lang-java-action/"/>
    <updated>2009-10-24T15:32:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2009/10/24/lang-java-action</id>
    <content type="html"><![CDATA[<h4>Java WindowListener &amp; ActionListener</h4>

<pre><code>    //package java_window;
    import java.awt.*;
    import java.awt.event.*;

    class Window
    {
        Frame fra = new Frame();
        public static int tt = 1;
        public static Label lb = new Label(" label ");
        public void go() {
            fra.addWindowListener(
                new WindowAdapter(){
                public void windowClosing(WindowEvent e) {
                    System.exit(0);
                }
            });
            fra.setSize(700, 550);
            fra.setLayout(null);
            Button but = new Button(" OK ");
            but.setBounds(200, 200, 100, 70);   fra.add(but);
            lb.setBounds(200, 300, 200, 100);    fra.add(lb);

            but.addActionListener(
                new ActionListener() {
                public void actionPerformed(ActionEvent event) {
                     lb.setText("ActionEvent "+event.getActionCommand()+"   "+(tt++));
                }
            });
            fra.show();
        }
    }

    public class Main {
        public static void main(String[] args) {
            Window win = new Window();
            win.go();
        }
    }
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java KeyListener 的使用]]></title>
    <link href="http://abcdxyzk.github.io/blog/2009/10/23/lang-java-key/"/>
    <updated>2009-10-23T22:49:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2009/10/23/lang-java-key</id>
    <content type="html"><![CDATA[<h4>Java KeyListener 的使用</h4>

<pre><code>    //package java_key;
    import java.awt.*;
    import java.awt.event.*;
    import javax.swing.*;

    class KeyWork extends JFrame implements KeyListener
    {
        private JLabel status;
        public KeyWork()
        {
            super("abcd");
            status = new JLabel();
            status.setFont(new Font("TimesRoman", Font.BOLD, 50));
            getContentPane().add(status, BorderLayout.CENTER);
            addKeyListener(this);
            setSize(700,500);
            show();
        }
        public void keyPressed(KeyEvent e) {
            char ch = e.getKeyChar();
            status.setText(String.valueOf(ch) + "   " +(int)ch);
        }
        public void keyTyped(KeyEvent e) {

        }
        public void keyReleased(KeyEvent e) {

        }
    }

    public class Main {
        public static void main(String[] args) {
            KeyWork app = new KeyWork();
            app.addWindowListener(new WindowAdapter(){
                public void windowClosing(WindowEvent e) {
                    System.exit(0);
                }
            });
        }
    }
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java MouseListener & MouseMotionListener]]></title>
    <link href="http://abcdxyzk.github.io/blog/2009/10/23/lang-java-mouse/"/>
    <updated>2009-10-23T21:42:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2009/10/23/lang-java-mouse</id>
    <content type="html"><![CDATA[<h5>Java 获取鼠标坐标</h5>

<pre><code>Point point= MouseInfo.getPointerInfo().getLocation();
</code></pre>

<h4>Java MouseListener &amp; MouseMotionListener 的使用</h4>

<pre><code>    import java.awt.*;
    import java.awt.event.*;
    import javax.swing.*;

    class MouseWork extends JFrame implements MouseListener,MouseMotionListener
    {
        private JLabel status;
        public MouseWork()
        {
            super("abcd");
            status = new JLabel();
            status.setFont(new Font("TimesRoman", Font.BOLD, 50));
            getContentPane().add(status, BorderLayout.CENTER);
            addMouseListener(this);
            addMouseMotionListener(this);
            setSize(700,500);
            show();
        }
        public void mousePressed(MouseEvent e) {
            status.setText(" Pressed "+e.getX()+" "+e.getY());
        }
        public void mouseExited(MouseEvent e) {
            status.setText(" Exited ");
        }
        public void mouseEntered(MouseEvent e) {
            status.setText(" Entered ");
        }
        public void mouseReleased(MouseEvent e) {
            status.setText(" Released ");
        }
        public void mouseClicked(MouseEvent e) {
            status.setText(" Clicked ");
        }
        public void mouseDragged(MouseEvent e) {
            status.setText(" Dragged "+e.getX()+" "+e.getY());
        }
        public void mouseMoved(MouseEvent e) {
            status.setText(" Moved "+e.getX()+" "+e.getY());
        }
    }

    public class Main {
        public static void main(String[] args) {
            MouseWork app = new MouseWork();
            app.addWindowListener(new WindowAdapter(){
                public void windowClosing(WindowEvent e) {
                    System.exit(0);
                }
            });
        }
    }
</code></pre>
]]></content>
  </entry>
  
</feed>
