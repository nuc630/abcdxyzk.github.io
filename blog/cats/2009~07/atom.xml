<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 2009~07 | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/2009~07/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2015-10-31T23:58:56+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Java 基本]]></title>
    <link href="http://abcdxyzk.github.io/blog/2009/07/18/lang-java-1/"/>
    <updated>2009-07-18T19:49:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2009/07/18/lang-java-1</id>
    <content type="html"><![CDATA[<h4>1. 最简单 Java 程序 // a+b</h4>

<pre><code>    import java.util.*;

    public class Main {
        public static void main(String[] args) {
        Scanner cin = new Scanner ( System.in );
        int a,b;
        a=cin.nextInt(); b=cin.nextInt();
        System.out.println(a+b);
        }
    }
</code></pre>

<p>当输入有多组数据时，可以改成
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import java.util.*;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;public class Main {
</span><span class='line'>public static void main(String[] args) {
</span><span class='line'>    Scanner cin = new Scanner ( System.in );
</span><span class='line'>    int a,b;
</span><span class='line'>    while(cin.hasNext())
</span><span class='line'>    {
</span><span class='line'>        a=cin.nextInt(); b=cin.nextInt();
</span><span class='line'>        System.out.println(a+b);
</span><span class='line'>    }
</span><span class='line'>}
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;#### 2. Java 浮点
</span><span class='line'>定义 double f;  
</span><span class='line'>输入 f=cin.f=cin.nextDouble();  
</span><span class='line'>输出 System.out.println(f);  
</span><span class='line'>也可以指定小数位数 System.out.printf("%0.2f\n", f);   
</span><span class='line'>注意 System.out.printf("%0.2f\n", f); 中用 "\n" 在 HDU 中提交会 PE ，但在 PKU 中不会  
</span><span class='line'>
</span><span class='line'>#### 3. Java 数组
</span><span class='line'>与 C/C++ 不同之处在于定义  
</span><span class='line'>Java定义格式  
</span><span class='line'>int a[]=new int[111]; 或者 int a[]; a=new int[111];  
</span><span class='line'>二维 int a[][]=new int[111][111];  
</span><span class='line'>其他基本与 C/C++ 一样
</span><span class='line'>
</span><span class='line'>#### 4. Java 字符串,字符数组
</span><span class='line'>字符串定义 String ss;  
</span><span class='line'>输入 ss=cin.next(); ss=cin.nextLine();  
</span><span class='line'>ss=cin.next();   相当于 C/C++   scanf("%s",ss);  
</span><span class='line'>ss=cin.nextLine(); 相当于 C/C++   gets(ss);  
</span><span class='line'>字符串不能改变其中某个字符  
</span><span class='line'>得到第 k 个字符 c=ss.charAt(k-1);  
</span><span class='line'>
</span><span class='line'>字符数组定义 char ch[]=new char[111];  
</span><span class='line'>因为字符串无法改变其中某个字符，所以可以将其转换成字符数组  
</span><span class='line'>即 ch=ss.toCharArray();   剩下的又和 C/C++ 没多少差别了  
</span><span class='line'>
</span><span class='line'>Java 中的 StringBuffer 和String 差不多  
</span><span class='line'>但 StringBuffer 可以动态改变，支持删除，插入等操作  
</span><span class='line'>
</span><span class='line'>#### 5 .Java 大整数，大浮点数
</span><span class='line'>Java 大整数，大浮点数可以表示一个很大很大的数，省去手写高进度的麻烦  
</span><span class='line'>要用Java 大整数，大浮点数必须先将 math 导入，即加一句 import java.math.*;  
</span><span class='line'>大整数 BigInteger  
</span><span class='line'>大浮点数 BigDecimal  
</span><span class='line'>定义 BigInteger bd;   BigDecimal bf;  
</span><span class='line'>把 int 转换成 BigInteger 格式 bd=BigInteger.valueOf(a);  
</span><span class='line'>
</span><span class='line'>大数之间的加减乘除 取模
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;加 BigInteger add(BigInteger other)      &lt;br/&gt;
</span><span class='line'>减 BigInteger subtract(BigInteger other)
</span><span class='line'>乘 BigInteger multiply(BigInteger other)
</span><span class='line'>除 BigInteger divide(BigInteger other)
</span><span class='line'>取模 BigInteger mod(BigInteger other)
</span><span class='line'>例如 bd=bd.add(cd);   // bd=bd+cd;</span></code></pre></td></tr></table></div></figure></p>

<p>大小比较
<code>
int compareTo(BigInteger other)
例如 k=bd.compareTo(cd);
k &gt;0 时 bd&gt;cd
</code></p>

<p>计算 2<sup>333</sup>
```
    import java.util.<em>;
    import java.math.</em>;</p>

<pre><code>public class Main {
    public static void main(String[] args) {
    Scanner cin = new Scanner ( System.in );
    BigInteger bd,cd;
    int i,j;
    bd=BigInteger.valueOf(1);
    for(i=1;i&lt;=333;i++)bd=bd.multiply(BigInteger.valueOf(2));
    System.out.println(bd);
    }
}
</code></pre>

<p>```
输出:17498005798264095394980017816940970922825355447145699491406164851279623993595007385788105416184430592</p>
]]></content>
  </entry>
  
</feed>
