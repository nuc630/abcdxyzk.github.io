<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 2012~05 | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/2012~05/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2015-11-17T15:30:21+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[git建库，配置颜色分支名]]></title>
    <link href="http://abcdxyzk.github.io/blog/2012/05/01/tools-git-base2/"/>
    <updated>2012-05-01T17:00:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2012/05/01/tools-git-base2</id>
    <content type="html"><![CDATA[<h4>建一个库</h4>

<h5>服务器</h5>

<pre><code>    mkdir allgit
    cd allgit
    git --bare init
</code></pre>

<h5>客户端</h5>

<pre><code>    git clone username@192.168.1.2:/home/abc/allgit allgit
    cd allgit
...
    git push origin master // 第一次的时候用， 以后直接用 git push
</code></pre>

<h4>配置颜色分支名</h4>

<h5>git 配色</h5>

<p>/home/username/.gitconfig
<code>
    [color]
        branch = auto
        status = auto
        diff = auto
        log = auto
        grep = auto
</code></p>

<h5>bash 显示分支名</h5>

<p>/home/username/.bash_profile  或 /home/username/.bashrc ？
```
    function parse_git_branch {
        git branch &ndash;no-color 2> /dev/null | sed -e &lsquo;/^[^<em>]/d&rsquo; -e &rsquo;s/</em> (.*)/(\1)/&lsquo;
    }</p>

<pre><code>function proml {
    local YELLOW="\[\033[01;32m\]"
    local WHITE="\[\033[01;00m\]"
#  local YELLOW="\[\033[0;33m\]"
#  local WHITE="\[\033[1;37m\]"
#  local cyan="\[\033[1;36m\]"
    case $TERM in
        xterm*)
        TITLEBAR='\[\033]0;\u@\h:\w\007\]'
        ;;
        *)
        TITLEBAR=""
        ;;
    esac
    PS1="${TITLEBAR}\
    $WHITE\u@\h:\w$YELLOW\$(parse_git_branch)\
    $WHITE\$ "
    PS2='&gt; '
    PS4='+ '
}
proml
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[导入数据库、导出表]]></title>
    <link href="http://abcdxyzk.github.io/blog/2012/04/17/mysql-dump-data/"/>
    <updated>2012-04-17T18:40:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2012/04/17/mysql-dump-data</id>
    <content type="html"><![CDATA[<h4>导入数据库</h4>

<h5>常用source 号令</h5>

<p>步入mysql数据库节制台，<br/>
如mysql -u root -p<br/>
mysql>use 数据库<br/>
然后施用source号令，后面参数为脚本文件（如这里用到的.sql）
<code>
mysql&gt;source /home/abcdxyzk/chai.sql
</code></p>

<h4>MySQL 导出表</h4>

<pre><code>mysqldump -uroot -p123456 test &gt; /home/my.sql
</code></pre>

<p>说下上面参数<br/>
数据库用户名：root<br/>
密码 ：123456<br/>
数据库名：test<br/>
/home/my.sql 为导出文件地址，</p>

<p>这里 是linux系统 所以为/home/my.sql如果是windows替换 它为：e:/my.sql 注意空格奥。。</p>

<h5>导出单个数据表结构和数据</h5>

<pre><code>导出整个数据库结构（不包含数据）
mysqldump -h localhost -uroot -p123456 database table &gt; dump.sql

导出单个数据表结构（不包含数据）
mysqldump -h localhost -uroot -p123456 -d database &gt; dump.sql

mysqldump -h localhost -uroot -p123456 -d database table &gt; dump.sql
</code></pre>
]]></content>
  </entry>
  
</feed>
